{"version":3,"file":"component---src-pages-sdk-index-md-0639d827e73c5c23c3f0.js","mappings":"4OAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIU,YAJF,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5BM,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAEMI,EAAc,CAClBN,aAAAA,GAEIO,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGT,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,kBAAgB,mBAExBA,EAAAA,EAAAA,KAAA,oEACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,YAEjBA,EAAAA,EAAAA,KAAA,gBACFA,EAAAA,EAAAA,KAAA,eAAS,+CAAqD,gcAgB9DA,EAAAA,EAAAA,KAACJ,EAAS,CAACe,MAAM,gBAAgBC,UAAU,aAAaF,QAAQ,cAAc,yGAQ5EV,EAAAA,EAAAA,KAAA,gBACFA,EAAAA,EAAAA,KAAA,eAAS,6DAAmE,y3BAiB5EA,EAAAA,EAAAA,KAACJ,EAAS,CAACe,MAAM,gBAAgBC,UAAU,aAAaF,QAAQ,cAAc,iHAQ5EV,EAAAA,EAAAA,KAAA,gBACFA,EAAAA,EAAAA,KAAA,eAAS,uCAA6C,sbAiBtDA,EAAAA,EAAAA,KAACJ,EAAS,CAACe,MAAM,gBAAgBC,UAAU,aAAaF,QAAQ,cAAc,mJAU5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,yBAAuB,4BAE/BA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQa,WAAW,KAAG,mBAA6B,WACtDb,EAAAA,EAAAA,KAAA,wFACAA,EAAAA,EAAAA,KAAA,cACEA,EAAAA,EAAAA,KAAA,SAAOa,WAAW,UAChBb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,UACbb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,KACb,MAAS,MAAI,UAEfb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,KACb,MAAS,MAAI,SAEfb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,KACb,MAAS,MAAI,kBAInBb,EAAAA,EAAAA,KAAA,SAAOa,WAAW,UAChBb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,UACbb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,KACb,MAAS,QAEXb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,KACb,MAAS,QAEXb,EAAAA,EAAAA,KAAA,MAAIa,WAAW,KACb,MAAS,WAKjBb,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,aAEjBA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,cAAYa,WAAW,KAAG,SAAuB,4IACpDb,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,aAEjBA,EAAAA,EAAAA,KAACJ,EAAS,CAACe,MAAM,gBAAgBC,UAAU,aAAaF,QAAQ,eAChEV,EAAAA,EAAAA,KAAA,MACE,GAAM,wBAAsB,yBAE9BA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMa,WAAW,MAClB,UAAa,uBAAqB,0HAKtCb,EAAAA,EAAAA,KAAA,MACE,GAAM,cAAY,eAEpBA,EAAAA,EAAAA,KAAA,MACE,GAAM,UAAQ,UAIpB,CAEAI,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/sdk/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/adobe-connect-sdk/adobe-connect-sdk/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst CodeBlock = makeShortcode(\"CodeBlock\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"sdk-references\"\n    }}>{`SDK References`}</h1>\n    <p>{`Read through the SDK methods, properties, and events. `}</p>\n    <h2 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h2>\n    <details>\n  <summary>allowParticipantPublish(msgName, allowFlag)</summary>\n    \n  #### allowParticipantPublish (`msgName`, `allowFlag`)\n  **Available since**: 10.8\n  \n  **Host Only** | This method will allow/block the participants from sending a sync event. \n  \n  \n  | Param   | Type  | Description  |\n  | ------ | ------------------- | ------------ |\n  | msgName  | `string` | Name of the message for which the permission will be set |\n  | allowFlag | `boolean` | If `true` then participants will be allowed     |\n  \n  **Returns**: `Void`\n  #### Example:\n  \n  <CodeBlock slots=\"heading, code\" languages=\"JavaScript\" mdxType=\"CodeBlock\" />\n  \n  #### allowParticipantPublish\n  \n  ```javascript\n  customPodObject.allowParticipantPublish(\"name\", true)\n  ```\n    </details>\n    <details>\n  <summary>dispatchSyncMessage(msgName, msgValue, isDelta, echoBack)</summary>\n  \n  #### dispatchSyncMessage (`msgName`, `msgValue`, `isDelta`, `echoBack`)\n  **Available since**: 10.0\n  \n  Method to send a sync message to other participants\n  \n  \n  | Param  | Type                | Description  |\n  | ------ | ------------------- | ------------ |\n  | msgName  | `string` | Name of the message to be sent -- should be meaningful to the pod running on other participant's machines |\n  | msgValue | `object` | The contents of the message to be sent, the format to be determined by your own custom pod     |\n  | isDelta | `boolean` | If `true`, then all of the events matching this message name will be sent to new particpants. If `false`, then only the last known event will be sent.     |\n  | echoBack | `boolean` | if `true`, then this instance of the custom pod will receive a corresponding sync message back, otherwise only the other participants will receive this message.     |\n  \n  #### Example:\n  \n  <CodeBlock slots=\"heading, code\" languages=\"JavaScript\" mdxType=\"CodeBlock\" />\n  \n  #### dispatchSyncMessage\n  \n  ```javascript\n  customPodObject.dispatchSyncMessage(\"name\", [\"John\"], true, true)\n  ```\n    </details>\n    <details>\n  <summary>getBreakoutRoomDetails (breakoutId)</summary>\n  \n  ### getBreakoutRoomDetails (`breakoutId`)\n  **Available since**: 11.0\n  \n  [Host Only Function] This method will return an object with information about a breakout room\n  \n  | Param      | Type     | Description |\n  |------------|----------|-------------|\n  | breakoutId | `number` |             |\n  \n  #### Returns:\n  \n  `Object`: Object that has two values breakoutRoom id and breakout room name, returns null if participant calls this function\n  \n  #### Example:\n  \n  <CodeBlock slots=\"heading, code\" languages=\"JavaScript\" mdxType=\"CodeBlock\" />\n  \n  #### getBreakoutRoomDetails\n  \n  ```javascript\n  let borObj = customPodObject.getBreakoutRoomDetails(1)\n  let name = borObj.name\n  let id = borObj.id\n  ```\n    </details>\n    <h3 {...{\n      \"id\": \"getbreakoutroomslist-\"\n    }}>{`getBreakoutRoomsList ()`}</h3>\n    <p><strong parentName=\"p\">{`Available since`}</strong>{`: 11.0`}</p>\n    <p>{`[Host Only Function]`}{` This method will return the list of breakout rooms`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Param`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"returns\"\n    }}>{`Returns:`}</h4>\n    <p><inlineCode parentName=\"p\">{`Array`}</inlineCode>{`: Array that contains the list of breakout rooms object that contains room id and name, returns null if participant calls this function`}</p>\n    <h4 {...{\n      \"id\": \"example\"\n    }}>{`Example:`}</h4>\n    <CodeBlock slots=\"heading, code\" languages=\"JavaScript\" mdxType=\"CodeBlock\" />\n    <h4 {...{\n      \"id\": \"getbreakoutroomslist\"\n    }}>{`getBreakoutRoomsList`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`let borList = customPodObject.getBreakoutRoomsList()\nlet room1Name = borList[0].name\nlet room1Id = borList[0].id\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h2 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h2>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","CodeBlock","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","_extends","mdxType","slots","languages","parentName","isMDXComponent"],"sourceRoot":""}