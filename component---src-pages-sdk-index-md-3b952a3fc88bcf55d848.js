"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[807],{11934:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return s},default:function(){return u}});var n,d=t(87462),l=t(63366),m=(t(15007),t(64983)),r=t(91515),i=["components"],s={},p=(n="CodeBlock",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,m.mdx)("div",e)}),o={_frontmatter:s},x=r.Z;function u(e){var a=e.components,t=(0,l.Z)(e,i);return(0,m.mdx)(x,(0,d.Z)({},o,t,{components:a,mdxType:"MDXLayout"}),(0,m.mdx)("h1",{id:"sdk-references"},"SDK References"),(0,m.mdx)("p",null,"Read through the SDK methods, properties, and events. "),(0,m.mdx)("h2",{id:"methods"},"Methods"),(0,m.mdx)("h4",{id:"allowparticipantpublish-msgname-allowflag"},"allowParticipantPublish (",(0,m.mdx)("inlineCode",{parentName:"h4"},"msgName"),", ",(0,m.mdx)("inlineCode",{parentName:"h4"},"allowFlag"),")"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Host Only")," | This method will allow/block the participants from sending a sync event. "),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"msgName"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")),(0,m.mdx)("td",{parentName:"tr",align:null},"Name of the message for which the permission will be set")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"allowFlag"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,m.mdx)("td",{parentName:"tr",align:null},"If ",(0,m.mdx)("inlineCode",{parentName:"td"},"true")," then participants will be allowed")))),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Returns"),": ",(0,m.mdx)("inlineCode",{parentName:"p"},"Void")),(0,m.mdx)("h4",{id:"example"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"allowparticipantpublish"},"allowParticipantPublish"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},'customPodObject.allowParticipantPublish("name", true)\n')),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"dispatchsyncmessage-msgname-msgvalue-isdelta-echoback"},"dispatchSyncMessage (",(0,m.mdx)("inlineCode",{parentName:"h4"},"msgName"),", ",(0,m.mdx)("inlineCode",{parentName:"h4"},"msgValue"),", ",(0,m.mdx)("inlineCode",{parentName:"h4"},"isDelta"),", ",(0,m.mdx)("inlineCode",{parentName:"h4"},"echoBack"),")"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,"Method to send a sync message to other participants"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"msgName"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")),(0,m.mdx)("td",{parentName:"tr",align:null},"Name of the message to be sent -- should be meaningful to the pod running on other participant's machines")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"msgValue"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"object")),(0,m.mdx)("td",{parentName:"tr",align:null},"The contents of the message to be sent, the format to be determined by your own custom pod")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"isDelta"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,m.mdx)("td",{parentName:"tr",align:null},"If ",(0,m.mdx)("inlineCode",{parentName:"td"},"true"),", then all of the events matching this message name will be sent to new particpants. If ",(0,m.mdx)("inlineCode",{parentName:"td"},"false"),", then only the last known event will be sent.")),(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"echoBack"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,m.mdx)("td",{parentName:"tr",align:null},"if ",(0,m.mdx)("inlineCode",{parentName:"td"},"true"),", then this instance of the custom pod will receive a corresponding sync message back, otherwise only the other participants will receive this message.")))),(0,m.mdx)("h4",{id:"example-1"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"dispatchsyncmessage"},"dispatchSyncMessage"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},'customPodObject.dispatchSyncMessage("name", ["John"], true, true)\n')),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"getbreakoutroomdetails-breakoutid"},"getBreakoutRoomDetails (",(0,m.mdx)("inlineCode",{parentName:"h4"},"breakoutId"),")"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 11.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Host Only")," | This method will return an object with information about a breakout room"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"breakoutId"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"number")),(0,m.mdx)("td",{parentName:"tr",align:null},"Breakout room ID")))),(0,m.mdx)("h4",{id:"returns"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Object"),": Object that has two values: Breakout Room ID and Breakout Room Name; returns ",(0,m.mdx)("inlineCode",{parentName:"p"},"null")," if a participant calls this function. "),(0,m.mdx)("h4",{id:"example-2"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"getbreakoutroomdetails"},"getBreakoutRoomDetails"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"let borObj = customPodObject.getBreakoutRoomDetails(1)\nlet name = borObj.name\nlet id = borObj.id\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"getbreakoutroomslist-"},"getBreakoutRoomsList ()"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 11.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Host Only")," | This method will return the list of breakout rooms"),(0,m.mdx)("h4",{id:"returns-1"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Array"),": Array that contains the list of breakout rooms object that contains room id and name, returns ",(0,m.mdx)("inlineCode",{parentName:"p"},"null")," if a participant calls this function."),(0,m.mdx)("h4",{id:"example-3"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"getbreakoutroomslist"},"getBreakoutRoomsList"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"let borList = customPodObject.getBreakoutRoomsList()\nlet room1Name = borList[0].name\nlet room1Id = borList[0].id\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"getmybreakoutroomdetails-"},"getMyBreakoutRoomDetails ()"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 11.0"),(0,m.mdx)("p",null,"This method will return the Object that contains the details of the bor in which calling user is currently in"),(0,m.mdx)("h4",{id:"returns-2"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Object"),": name, id"),(0,m.mdx)("h4",{id:"example-4"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"getmybreakoutroomdetails"},"getMyBreakoutRoomDetails"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"let myBorObj = customPodObject.getMyBreakoutRoomDetails()\nlet borId = myBorObj.id\nlet borName = myBorObj.name\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"getconfig-"},"getConfig ()"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,"This method returns configuration of the meeting like accountId, isAddin, isWhiteBoardOn, etc. "),(0,m.mdx)("h4",{id:"returns-3"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Object"),": configuration"),(0,m.mdx)("h4",{id:"example-5"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"getconfig"},"getConfig"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"let data = customPodObject.getConfig();\ndata.accountId\ndata.archiveDuration\ndata.isAddin\ndata.isArchive\ndata.isBreakOutSession\ndata.isCaughtUp\ndata.isPointerOn\ndata.isSecure\ndata.isWhiteBoardOn\ndata.language\ndata.playState\ndata.podTitle\ndata.role\ndata.roomSCOID\ndata.url\ndata.userID\ndata.userName\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"getmeetinginfo-"},"getMeetingInfo ()"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,"This method will return a meeting info object."),(0,m.mdx)("h4",{id:"returns-4"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Object"),": object that has accountId, scoId, lang, url."),(0,m.mdx)("h4",{id:"example-6"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"getmeetinginfo"},"getMeetingInfo"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"let data = customPodObject.getMeetingInfo()\ndata.accountId\ndata.lang\ndata.url\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"getmyuserdetails-"},"getMyUserDetails ()"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,"This method will return a user data object for the current user"),(0,m.mdx)("h4",{id:"returns-5"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Object"),": object that has two properties - ",(0,m.mdx)("inlineCode",{parentName:"p"},"message")," and ",(0,m.mdx)("inlineCode",{parentName:"p"},"data"),"."),(0,m.mdx)("h4",{id:"example-7"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"getmyuserdetails"},"getMyUserDetails"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},'let myUserData = customPodObject.getMyUserDetails()\nmyUserData.message   // "Success" for live meeting and "Access Denied" for recording\nmyUserData.data.name\nmyUserData.data.fullName\nmyUserData.data.role\nmyUserData.data.id\nmyUserData.data.status // this will be an array containing all the status set by this user\n')),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"getpodinfo-"},"getPodInfo ()"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,"This method will return a pod info object"),(0,m.mdx)("h4",{id:"returns-6"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Object"),": object that has ",(0,m.mdx)("inlineCode",{parentName:"p"},"podTitle"),", ",(0,m.mdx)("inlineCode",{parentName:"p"},"isWhiteBoardOn")),(0,m.mdx)("h4",{id:"example-8"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"getpodinfo"},"getPodInfo"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"let data = customPodObject.getPodInfo()\ndata.isWhiteBoardOn\ndata.podTitle\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"getuserdetails-userid"},"getUserDetails (",(0,m.mdx)("inlineCode",{parentName:"h4"},"userID"),")"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Host Only")," | This method will return a user data object, assuming that the user is a host and that a valid UserID is provided"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"userID"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")),(0,m.mdx)("td",{parentName:"tr",align:null},"ID of the user")))),(0,m.mdx)("h4",{id:"returns-7"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Object"),": object with user details, return null if participant call this function"),(0,m.mdx)("h4",{id:"example-9"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"getuserdetails"},"getUserDetails"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},'let userData = customPodObject.getUserDetails(userId)\nuserData.message    // "Success" for live meeting and "Access Denied" for recording\nuserData.data.breakoutId\nuserData.data.breakoutRoomName\nuserData.data.fullName\nuserData.data.name\nuserData.data.role\n')),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"getuserlist-"},"getUserList ()"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,"This method will return the object that has userIds of all the users in the meeting"),(0,m.mdx)("h4",{id:"returns-8"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Object"),": object that has two properties - ",(0,m.mdx)("inlineCode",{parentName:"p"},"message")," and ",(0,m.mdx)("inlineCode",{parentName:"p"},"data"),"."),(0,m.mdx)("h4",{id:"example-10"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"getuserlist"},"getUserList"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},'let userListData = customPodObject.getUserList()\nuserListData.message  // "Success" for live meeting and "Access Denied" for recording\nuserListData.data  // Array containing userIds of the user present in meeting\n')),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"isbreakoutsessionon-"},"isBreakOutSessionOn ()"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,"This method will return a boolean that denotes whether Breakouts are started or not."),(0,m.mdx)("h4",{id:"returns-9"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Boolean"),": flag that denotes whether breakoutSession is started or not"),(0,m.mdx)("h4",{id:"example-11"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"isbreakoutsessionon"},"isBreakOutSessionOn"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"let flag = customPodObject.isBreakOutSessionOn()\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"iswhiteboardon-"},"isWhiteBoardOn ()"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,"This method will return a boolean that denotes whether white board is started or not."),(0,m.mdx)("h4",{id:"returns-10"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Boolean"),": flag that denotes whether whiteboard is started or not"),(0,m.mdx)("h4",{id:"example-12"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"iswhiteboardon"},"isWhiteBoardOn"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"let flag = customPodObject.isWhiteBoardOn()\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h3",{id:"maximize-show"},"maximize (",(0,m.mdx)("inlineCode",{parentName:"h3"},"show"),")"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Host Only")," | This method will switch Custom Pod between maximize and minimize state"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"show"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,m.mdx)("td",{parentName:"tr",align:null})))),(0,m.mdx)("h4",{id:"returns-11"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Void")),(0,m.mdx)("h4",{id:"example-13"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"maximize"},"maximize"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.maximize(true)  // this will maximize the pod but only if function called from host side\ncustomPodObject.maximize(false) // this will restore the pod but only if function called from host side\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"podvisible-showflag"},"podVisible (",(0,m.mdx)("inlineCode",{parentName:"h4"},"showFlag"),")"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.8"),(0,m.mdx)("p",null,"This method will show/hide the sharePod in which custom pod is loaded"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"showFlag"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,m.mdx)("td",{parentName:"tr",align:null})))),(0,m.mdx)("h4",{id:"returns-12"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Void")),(0,m.mdx)("h4",{id:"example-14"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"podvisible"},"podVisible"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.podVisible = true  // to show the pod\ncustomPodObject.podVisible = false // to hide the pod\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"setmenubarcontrolsvisibility-showflag"},"setMenuBarControlsVisibility (",(0,m.mdx)("inlineCode",{parentName:"h4"},"showFlag"),")"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.8"),(0,m.mdx)("p",null,"This method will show/hide the app bar items"),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"showFlag"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,m.mdx)("td",{parentName:"tr",align:null})))),(0,m.mdx)("h4",{id:"returns-13"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Void")),(0,m.mdx)("h4",{id:"example-15"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"setmenubarcontrolsvisibility"},"setMenuBarControlsVisibility"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.setMenuBarControlsVisibility(true)  // to show the app bar items\ncustomPodObject.setMenuBarControlsVisibility(false) // to hide the app bar items\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"setmystatus-status"},"setMyStatus (",(0,m.mdx)("inlineCode",{parentName:"h4"},"status"),")"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.8"),(0,m.mdx)("p",null,"Allows user to set his own status."),(0,m.mdx)("p",null,"Accepted Status Values are:"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"speechQuestion")," : Raise Hand"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"speechQuestionLower")," : Lower Raised Hand"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"speechAgree")," : Agree"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"speechDisagree")," : Disagree"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"speechAgreeClear")," : Clear Agree or Disagree"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"steppedAway")," : Step Away"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"stepIn")," : Step In"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"speechLouder")," : Speak Louder"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"speechQuieter")," : Speak Softer"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"speechFaster")," : Speed Up"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"speechSlower")," : Slow Down"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"speechLaughter")," : Laughter"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"speechApplause")," : Applause"),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"clearStatus")," : Clear Status")),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"status"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"string")),(0,m.mdx)("td",{parentName:"tr",align:null},"statusValue")))),(0,m.mdx)("h4",{id:"returns-14"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Void")),(0,m.mdx)("h4",{id:"example-16"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"setmystatus"},"setMyStatus"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},'setMyStatus("speechQuestion")\n')),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"setpodcontrolsvisibility-showflag"},"setPodControlsVisibility (",(0,m.mdx)("inlineCode",{parentName:"h4"},"showFlag"),")"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.8"),(0,m.mdx)("p",null,"This method will show/hide the pod menu items."),(0,m.mdx)("table",null,(0,m.mdx)("thead",{parentName:"table"},(0,m.mdx)("tr",{parentName:"thead"},(0,m.mdx)("th",{parentName:"tr",align:null},"Param"),(0,m.mdx)("th",{parentName:"tr",align:null},"Type"),(0,m.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,m.mdx)("tbody",{parentName:"table"},(0,m.mdx)("tr",{parentName:"tbody"},(0,m.mdx)("td",{parentName:"tr",align:null},"showFlag"),(0,m.mdx)("td",{parentName:"tr",align:null},(0,m.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,m.mdx)("td",{parentName:"tr",align:null})))),(0,m.mdx)("h4",{id:"returns-15"},"Returns:"),(0,m.mdx)("p",null,(0,m.mdx)("inlineCode",{parentName:"p"},"Void")),(0,m.mdx)("h4",{id:"example-17"},"Example:"),(0,m.mdx)(p,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),(0,m.mdx)("h4",{id:"setpodcontrolsvisibility"},"setPodControlsVisibility"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.setPodControlsVisibility(true)  // to show the pod options\ncustomPodObject.setPodControlsVisibility(false) // to hide the pod options\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h2",{id:"properties"},"Properties"),(0,m.mdx)("h4",{id:"agree"},(0,m.mdx)("inlineCode",{parentName:"h4"},"AGREE")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' A String value that is used to set the "Agree" user status.'),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"agree_disagree_clear"},(0,m.mdx)("inlineCode",{parentName:"h4"},"AGREE_DISAGREE_CLEAR")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," A String value that is used to clear the Agree or disagree status."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Example:")),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"sdkobject.setMyStatus(sdkObject.AGREE_DISAGREE_CLEAR)\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"applause"},(0,m.mdx)("inlineCode",{parentName:"h4"},"APPLAUSE")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' A String value that is used to set the "Applause" status in connect.'),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"archiveduration"},(0,m.mdx)("inlineCode",{parentName:"h4"},"archiveDuration")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"number")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.5"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," This specifies the duration of the recording."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"build_no"},(0,m.mdx)("inlineCode",{parentName:"h4"},"BUILD_NO")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' This String defaults to "2.0".'),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"clear_status"},(0,m.mdx)("inlineCode",{parentName:"h4"},"CLEAR_STATUS")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," User status value used as an argument of setMyStatus function. This String is used to clear the status."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"connectversion"},(0,m.mdx)("inlineCode",{parentName:"h4"},"connectVersion")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"number")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," A boolean that tells which version of connect you are using."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"date"},(0,m.mdx)("inlineCode",{parentName:"h4"},"DATE")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 11.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," This String value will give today's date."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"disagree"},(0,m.mdx)("inlineCode",{parentName:"h4"},"DISAGREE")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' User status value used as an argument of setMyStatus function. A String value that is used to set the "Disagree" status.'),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"issynced"},(0,m.mdx)("inlineCode",{parentName:"h4"},"isSynced")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"number")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," A boolean that tells whether share pod is Synced or not."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"k_host"},(0,m.mdx)("inlineCode",{parentName:"h4"},"k_HOST")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," A String value that denotes the host role in connect application."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"k_participant"},(0,m.mdx)("inlineCode",{parentName:"h4"},"k_PARTICIPANT")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," A String value that denotes the participant role in connect application."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"k_presenter"},(0,m.mdx)("inlineCode",{parentName:"h4"},"k_PRESENTER")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," A String value that denotes the presenter role in connect application."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"language"},(0,m.mdx)("inlineCode",{parentName:"h4"},"language")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," A String value that denotes the language set in connect application."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"laughter"},(0,m.mdx)("inlineCode",{parentName:"h4"},"LAUGHTER")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' User status value used as an argument of setMyStatus function. A String value that is used to set the "Laughter" status.'),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"lower_hand"},(0,m.mdx)("inlineCode",{parentName:"h4"},"LOWER_HAND")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' User status value used as an argument of setMyStatus function. A String value that is used to clear "Raise Hand" status.'),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"playstate"},(0,m.mdx)("inlineCode",{parentName:"h4"},"playState")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.5"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," A String that specifies the playState of the recording."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"podheight"},(0,m.mdx)("inlineCode",{parentName:"h4"},"podHeight")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"number")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," A number that specifies the height of the pod containing the application."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"podid"},(0,m.mdx)("inlineCode",{parentName:"h4"},"podID")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"number")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 11.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," A number that specifies the podId in which custom pod is loaded."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"podminheight"},(0,m.mdx)("inlineCode",{parentName:"h4"},"podMinHeight")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"number")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," A number that specifies the minimum height of the pod containing the application."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"podminwidth"},(0,m.mdx)("inlineCode",{parentName:"h4"},"podMinWidth")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"number")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," A number that specifies the minimum width of the pod containing the application."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"podwidth"},(0,m.mdx)("inlineCode",{parentName:"h4"},"podWidth")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"number")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:")," A number that specifies the width of the pod containing the application."),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"raise_hand"},(0,m.mdx)("inlineCode",{parentName:"h4"},"RAISE_HAND")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' User status value used as an argument of setMyStatus function. A String value that is used to set the "Raise Hand" status.'),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"slow_down"},(0,m.mdx)("inlineCode",{parentName:"h4"},"SLOW_DOWN")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' User status value used as an argument of setMyStatus function. A String value that is used to set the "Slow Down" status.'),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"speak_louder"},(0,m.mdx)("inlineCode",{parentName:"h4"},"SPEAK_LOUDER")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' User status value used as an argument of setMyStatus function. A String value that is used to set the "Speak Louder" status.'),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"speak_softer"},(0,m.mdx)("inlineCode",{parentName:"h4"},"SPEAK_SOFTER")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' User status value used as an argument of setMyStatus function. A String value that is used to set the "Speak Softer" status.'),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"speed_up"},(0,m.mdx)("inlineCode",{parentName:"h4"},"SPEED_UP")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' User status value used as an argument of setMyStatus function. A String value that is used to set the "Speed Up" status.'),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"step_away"},(0,m.mdx)("inlineCode",{parentName:"h4"},"STEP_AWAY")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' User status value used as an argument of setMyStatus function. A String value that is used to set the "Step Away" status.'),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"step_in"},(0,m.mdx)("inlineCode",{parentName:"h4"},"STEP_IN")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' User status value used as an argument of setMyStatus function. A String value that is used to set the "Step In" status.'),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"version"},(0,m.mdx)("inlineCode",{parentName:"h4"},"VERSION")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Type:")," ",(0,m.mdx)("inlineCode",{parentName:"p"},"string")),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since:")," 10.8"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description:"),' This String value that defaults to "2.0".'),(0,m.mdx)("hr",null),(0,m.mdx)("h2",{id:"events"},"Events"),(0,m.mdx)("h4",{id:"caughtup"},"caughtUp"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": Event that indicates that the caughtUp phase is complete, but also is an indication that it is now safe to send messages more freely to the Connect application."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"UNKNOWN")," (Void)")),(0,m.mdx)("h4",{id:"example-18"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},'customPodObject.registerCallback("caughtUp", () => ( this.caughtUp() ));\nthis.caughtUp(){\n    console.log("Here my event got caught I will put my logic here");\n}\n')),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"playstatechanged"},"playStateChanged"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.5"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": ","[RECORDING]",": When playStateChanged from play to pause or vice versa."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"event")," (Object): this object has playState property")),(0,m.mdx)("h4",{id:"example-19"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.registerCallback(\"playStateChanged\", (evt) => ( this.playStateChanged(evt) ));\nthis.roleChanged(evt){\n    evt.playState\n    evt.type // 'playStateChanged'\n}\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"podclosed"},"podClosed"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 11.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": When pod is hidden / closed."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"event")," (Object): this object only contains event type")),(0,m.mdx)("h4",{id:"example-20"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.registerCallback(\"podClosed\", (evt) => ( this.podClosed(evt) ));\nthis.podClosed(evt){\n    evt.type // 'sizeChanged'\n}\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"podtitlechanged"},"podTitleChanged"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": When title of pod in which custom pod is shared is changed."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"event")," (Object): this object has podTitle as property that gives the new title")),(0,m.mdx)("h4",{id:"example-21"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.registerCallback(\"podTitleChanged\", (evt) => ( this.podTitleChanged(evt) ));\nthis.podTitleChanged(evt){\n    evt.podTitle\n    evt.type // 'podTitleChanged'\n}\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"pointertoggle"},"pointerToggle"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": When state of pointer is toggled."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"event")," (Object): this object has isPointerOn property")),(0,m.mdx)("h4",{id:"example-22"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.registerCallback(\"pointerToggle\", (evt) => ( this.pointerToggle(evt) ));\nthis.pointerToggle(evt){\n    evt.isPointerOn\n    evt.type // 'pointerToggle'\n}\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"rolechanged"},"roleChanged"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": When role of a user is changed."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"event")," (Object): this object has type, newRole and userId as property.")),(0,m.mdx)("h4",{id:"example-23"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.registerCallback(\"roleChanged\", (evt) => ( this.roleChanged(evt) ));\nthis.roleChanged(evt){\n    evt.newRole\n    evt.type // 'roleChanged'\n    evt.userId\n}\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"sizechanged"},"sizeChanged"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 11.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": When pod Size is Changed."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"event")," (Object): this object has updated width and height as property")),(0,m.mdx)("h4",{id:"example-24"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.registerCallback(\"sizeChanged\", (evt) => ( this.sizeChanged(evt) ));\nthis.sizeChanged(evt){\n    evt.width\n    evt.height \n    evt.type // 'sizeChanged'\n}\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"syncmessagereceived"},"syncMessageReceived"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": When sync messages are received."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"event")," (Object): this object has msgNm and msgVal")),(0,m.mdx)("h4",{id:"example-25"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.registerCallback(\"syncMessageReceived\", (evt) => ( this.syncMessageReceived(evt) ));\nthis.syncMessageReceived(evt){\n    evt.isDelta\n    evt.msgNm\n    evt.msgVal\n    evt.type // 'syncMessageReceived'\n    evt.uID  // userId of the user sending the sync message\n}\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"syncmodechanged"},"syncModeChanged"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": When Sync Mode of share pod is changed."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"event")," (Object): this object has two properties didISync and isSynced")),(0,m.mdx)("h4",{id:"example-26"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.registerCallback(\"syncModeChanged\", (evt) => ( this.syncModeChanged(evt) ));\nthis.syncModeChanged(evt){\n    evt.didISync\n    evt.isSynced\n    evt.type // 'syncModeChanged'\n}\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"userdetailschanged"},"userDetailsChanged"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": When user details get changed such as name of the user is changed."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"event")," (Object): this object has type property that denotes the type of the event, fullName and userId of the user")),(0,m.mdx)("h4",{id:"example-27"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.registerCallback(\"userDetailsChanged\", (evt) => ( this.userDetailsChanged(evt) ));\nthis.userDetailsChanged(evt){\n    evt.fullName\n    evt.name\n    evt.type // 'userDetailsChanged'\n    evt.userId\n}\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"userjoined"},"userJoined"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": Event fired when user enters the meeting."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"event")," (Object): this object has user property that holds details of the user joined and type property that shows type of event")),(0,m.mdx)("h4",{id:"example-28"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.registerCallback(\"userJoined\", (evt) => ( this.userJoined(evt) ));\nthis.userJoined(evt){\n    evt.type       // 'userJoined'\n    evt.user.breakoutId\n    evt.user.breakoutRoomName\n    evt.user.fullName\n    evt.user.id\n    evt.user.name\n    evt.user.role\n}\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"userleft"},"userLeft"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": When user joins the meeting."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"event")," (Object): this object has type property and userId property")),(0,m.mdx)("h4",{id:"example-29"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},'customPodObject.registerCallback("userLeft", (evt) => ( this.userLeft(evt) ));\nthis.userLeft(evt){\n    evt.type  // "userLeft"\n    evt.userID\n}\n')),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"userstatuschanged"},"userStatusChanged"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": When user status gets changed."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"event")," (Object): this object has userId and status as its property")),(0,m.mdx)("h4",{id:"example-30"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.registerCallback(\"userStatusChanged\", (evt) => ( this.userStatusChanged(evt) ));\nthis.userStatusChanged(evt){\n    evt.type  // 'userStatusChanged'\n    evt.status  // Array containing all the status of this user\n    evt.userId\n}\n")),(0,m.mdx)("hr",null),(0,m.mdx)("h4",{id:"whiteboardtoggle"},"whiteBoardToggle"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Available since"),": 10.0"),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Description"),": When state of whiteboard is toggled."),(0,m.mdx)("p",null,(0,m.mdx)("strong",{parentName:"p"},"Event Payload"),": "),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"event")," (Object): this object has isWhiteBoardOn property")),(0,m.mdx)("h4",{id:"example-31"},"Example:"),(0,m.mdx)("pre",null,(0,m.mdx)("code",{parentName:"pre",className:"language-javascript"},"customPodObject.registerCallback(\"whiteBoardToggle\", (evt) => ( this.whiteBoardToggle(evt) ));\nthis.whiteBoardToggle(evt){\n    evt.isWhiteBoardOn\n    evt.type // 'whiteBoardToggle'\n}\n")),(0,m.mdx)("hr",null))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-sdk-index-md-3b952a3fc88bcf55d848.js.map