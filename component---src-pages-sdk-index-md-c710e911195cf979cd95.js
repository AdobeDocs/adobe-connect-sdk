"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[8807],{11934:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return m},default:function(){return p}});var o,n=a(87462),s=a(63366),l=(a(15007),a(64983)),i=a(91515),r=["components"],m={},d=(o="CodeBlock",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.mdx)("div",e)}),c={_frontmatter:m},u=i.Z;function p(e){var t=e.components,a=(0,s.Z)(e,r);return(0,l.mdx)(u,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.mdx)("h1",{id:"sdk-references"},"SDK References"),(0,l.mdx)("p",null,"Read through the SDK methods, properties, and events. "),(0,l.mdx)("h2",{id:"methods"},"Methods"),(0,l.mdx)("details",null,(0,l.mdx)("summary",null,"allowParticipantPublish(msgName, allowFlag)"),"#### allowParticipantPublish (`msgName`, `allowFlag`) **Available since**: 10.8 **Host Only** | This method will allow/block the participants from sending a sync event. | Param   | Type  | Description  | | ------ | ------------------- | ------------ | | msgName  | `string` | Name of the message for which the permission will be set | | allowFlag | `boolean` | If `true` then participants will be allowed     | **Returns**: `Void` #### Example:",(0,l.mdx)(d,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),'#### allowParticipantPublish ```javascript customPodObject.allowParticipantPublish("name", true) ```'),(0,l.mdx)("details",null,(0,l.mdx)("summary",null,"dispatchSyncMessage(msgName, msgValue, isDelta, echoBack)"),"#### dispatchSyncMessage (`msgName`, `msgValue`, `isDelta`, `echoBack`) **Available since**: 10.0 Method to send a sync message to other participants | Param  | Type                | Description  | | ------ | ------------------- | ------------ | | msgName  | `string` | Name of the message to be sent -- should be meaningful to the pod running on other participant's machines | | msgValue | `object` | The contents of the message to be sent, the format to be determined by your own custom pod     | | isDelta | `boolean` | If `true`, then all of the events matching this message name will be sent to new particpants. If `false`, then only the last known event will be sent.     | | echoBack | `boolean` | if `true`, then this instance of the custom pod will receive a corresponding sync message back, otherwise only the other participants will receive this message.     | #### Example:",(0,l.mdx)(d,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),'#### dispatchSyncMessage ```javascript customPodObject.dispatchSyncMessage("name", ["John"], true, true) ```'),(0,l.mdx)("details",null,(0,l.mdx)("summary",null,"getBreakoutRoomDetails (breakoutId)"),"### getBreakoutRoomDetails (`breakoutId`) **Available since**: 11.0 [Host Only Function] This method will return an object with information about a breakout room | Param      | Type     | Description | |------------|----------|-------------| | breakoutId | `number` |             | #### Returns: `Object`: Object that has two values breakoutRoom id and breakout room name, returns null if participant calls this function #### Example:",(0,l.mdx)(d,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),"#### getBreakoutRoomDetails ```javascript let borObj = customPodObject.getBreakoutRoomDetails(1) let name = borObj.name let id = borObj.id ```"),(0,l.mdx)("details",null,(0,l.mdx)("summary",null,"getBreakoutRoomsList ()"),(0,l.mdx)("h3",{id:"getbreakoutroomslist-"},"getBreakoutRoomsList ()"),(0,l.mdx)("p",null,"  ",(0,l.mdx)("strong",{parentName:"p"},"Available since"),": 11.0"),(0,l.mdx)("p",null,"  ","[Host Only Function]"," This method will return the list of breakout rooms"),(0,l.mdx)("table",null,(0,l.mdx)("thead",{parentName:"table"},(0,l.mdx)("tr",{parentName:"thead"},(0,l.mdx)("th",{parentName:"tr",align:null},"Param"),(0,l.mdx)("th",{parentName:"tr",align:null},"Type"),(0,l.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,l.mdx)("tbody",{parentName:"table"},(0,l.mdx)("tr",{parentName:"tbody"},(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null}),(0,l.mdx)("td",{parentName:"tr",align:null})))),(0,l.mdx)("h4",{id:"returns"},"Returns:"),(0,l.mdx)("p",null,"  ",(0,l.mdx)("inlineCode",{parentName:"p"},"Array"),": Array that contains the list of breakout rooms object that contains room id and name, returns null if participant calls this function"),(0,l.mdx)("h4",{id:"example"},"Example:"),(0,l.mdx)(d,{slots:"heading, code",languages:"JavaScript",mdxType:"CodeBlock"}),"#### getBreakoutRoomsList ```javascript let borList = customPodObject.getBreakoutRoomsList() let room1Name = borList[0].name let room1Id = borList[0].id ````"),(0,l.mdx)("h2",{id:"properties"},"Properties"),(0,l.mdx)("h2",{id:"events"},"Events"))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-sdk-index-md-c710e911195cf979cd95.js.map